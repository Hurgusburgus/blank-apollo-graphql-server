type User {
  id: String!
  username: String!
  email: String!
}

type Participant {
  playerNum: String!
  User: User!
}

type Table {
  id: String!
  gameId: String!
  host: User!
  participants: [User]
}

type GameState {
  player1: Player!
  player2: Player!
  turnCount: Int!
  currentTurn: String!
}

type Player {
  id: String!
  left: Int!
  right: Int!
}

type Query {
  getGameState: GameState!
  getTables: [Table]!
}

enum Side {
  LEFT
  RIGHT
}

type Mutation {
  createUser(email: String!, username: String!, password: String!): User
  createTable: Table
  joinTable(tableId: String!): Table
  attack(attackingSide: Side, receivingSide: Side): GameState
}
